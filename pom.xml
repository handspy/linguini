<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- ********************************************** -->
    <!-- ***************** PARENT POM ***************** -->
    <!-- ********************************************** -->

    <parent>
        <groupId>com.bernardomg.maven</groupId>
        <artifactId>base-pom</artifactId>
        <version>1.2.4</version>
    </parent>

    <!-- ********************************************** -->
    <!-- **************** PROJECT INFO **************** -->
    <!-- ********************************************** -->

    <groupId>pt.up.hs</groupId>
    <artifactId>linguini</artifactId>
    <version>1.1.10</version>
    <packaging>jar</packaging>

    <name>Linguini</name>
    <description>
        Small Java library for written text linguistics. Text linguistics is a
        branch of linguistics concerned with the description and analysis of
        extended texts (either spoken or written) in communicative contexts.
        This library aims to be independent of the natural language used.
    </description>
    <url>https://github.com/handspy/linguini</url>
    <inceptionYear>2019</inceptionYear>

    <licenses>
        <license>
            <name>GNU General Public License v3 (GPLv3)</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
        </license>
    </licenses>

    <!-- ********************************************** -->
    <!-- ************ RESOURCES AND SERVICES ********** -->
    <!-- ********************************************** -->

    <scm>
        <connection>scm:git:https://github.com/handspy/linguini.git</connection>
        <developerConnection>scm:git:https://github.com/handspy/linguini.git</developerConnection>
        <tag>head</tag>
        <url>https://www.github.com/handspy/linguini</url>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://www.github.com/handspy/linguini/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Travis CI</system>
        <url>https://travis-ci.org/handspy/linguini</url>
        <notifiers/>
    </ciManagement>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>bintray-handspy-maven</id>
            <name>Releases Repository</name>
            <url>https://api.bintray.com/maven/handspy/maven/linguini</url>
        </repository>
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>snapshots</id>
            <name>Snapshots Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- ********************************************** -->
    <!-- ****************** PROFILES ****************** -->
    <!-- ********************************************** -->

    <profiles>
        <profile>
            <!-- Profile for the Eclipse Maven plugin -->
            <!-- Sets the POM so this plugin does not give the usual unregistered goals
               errors -->
            <!-- It will be activated automatically on Eclipse if this has the m2e plugin,
               by detecting the version property -->
            <id>eclipse-maven</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <!-- m2e lifecycle mapping -->
                            <!-- This is used to configure the Maven plugin for Eclipse. -->
                            <!-- Among other things, it allows registering goals, which
                               Eclipse would otherwise reject. -->
                            <!-- It has no real effect on Maven. -->
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>${plugin.lifecycle.version}</version>
                            <configuration>
                                <!-- Sample fix for plugin executions. -->
                                <!-- This is to be used in case a Maven plugin gives problems
                                   in Eclipse -->
                                <!-- <lifecycleMappingMetadata> <pluginExecutions> <pluginExecution>
                                   <pluginExecutionFilter> <groupId>org.jacoco</groupId> <artifactId>jacoco-maven-plugin</artifactId>
                                   <versionRange>[0.5,)</versionRange> <goals> <goal>prepare-agent</goal> </goals> </pluginExecutionFilter>
                                   <action> <ignore /> </action> </pluginExecution> </pluginExecutions> </lifecycleMappingMetadata> -->
                                <downloadSources>true</downloadSources>
                                <downloadJavadocs>true</downloadJavadocs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <!-- ============================================== -->
        <!-- ============ DEPLOYMENT PROFILES ============= -->
        <!-- ============================================== -->
        <profile>
            <!-- Release deployment profile. -->
            <!-- Sets the site repository to point to the releases repo. -->
            <id>deployment-release</id>
            <activation>
                <!-- Active by default so the repository appears in the reports. -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <distributionManagement>
                <site>
                    <id>site</id>
                    <name>Project Documentation Site</name>
                    <!-- The URL should be set externally -->
                    <url>${site.release.url}</url>
                </site>
            </distributionManagement>
        </profile>
        <profile>
            <!-- Development deployment profile. -->
            <!-- Sets the site repository to point to the development repo. -->
            <id>deployment-development</id>
            <distributionManagement>
                <site>
                    <id>site-development</id>
                    <name>Project Development Documentation Site</name>
                    <!-- The URL should be set externally -->
                    <url>${site.develop.url}</url>
                </site>
            </distributionManagement>
        </profile>
        <profile>
            <!-- Deployment profile. -->
            <!-- Sets ups the environment for deployment. -->
            <id>deployment</id>
            <properties>
                <!-- Tests are skipped. -->
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>
    </profiles>

    <!-- ********************************************** -->
    <!-- *********** ORGANIZATION AND MEMBERS ********* -->
    <!-- ********************************************** -->

    <organization>
        <name>HandSpy (University of Porto)</name>
        <url>https://github.com/handspy</url>
    </organization>

    <developers>
        <developer>
            <id>jcpaiva</id>
            <name>Jos√© Carlos Paiva</name>
            <email>hello@josecpaiva.me</email>
            <url>https://github.com/handspy</url>
            <organization>HandSpy (University of Porto)</organization>
            <organizationUrl>https://github.com/handspy</organizationUrl>
            <roles>
                <role>Lead Developer</role>
            </roles>
            <timezone>0</timezone>
            <properties/>
        </developer>
    </developers>

    <!-- ********************************************** -->
    <!-- **************** PROPERTIES ****************** -->
    <!-- ********************************************** -->

    <properties>
        <!-- ============================================== -->
        <!-- ================ JAVA VERSION ================ -->
        <!-- ============================================== -->
        <java.release>11</java.release>
        <java.version>1.11</java.version>
        <!-- ============================================== -->
        <!-- =============== MANIFEST DATA ================ -->
        <!-- ============================================== -->
        <manifest.name>pt/up/hs</manifest.name>
        <!-- ============================================== -->
        <!-- =========== DEPENDENCIES VERSIONS ============ -->
        <!-- ============================================== -->
        <jackson-core.version>2.11.0</jackson-core.version>
        <!--<guava.version>28.1-jre</guava.version>-->
        <junit.jupiter.version>5.4.0</junit.jupiter.version>
        <mockito.version>3.1.0</mockito.version>
        <!--<log4j.version>2.12.1</log4j.version>-->
        <slf4j.version>1.7.28</slf4j.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <stanford-nlp.version>3.9.2</stanford-nlp.version>
        <!-- ============================================== -->
        <!-- ============== PLUGINS VERSIONS ============== -->
        <!-- ============================================== -->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
        <!-- ============================================== -->
        <!-- ================= MAVEN SITE ================= -->
        <!-- ============================================== -->
        <site.skin.version>1.4.3</site.skin.version>
        <bintrayURL>https://bintray.com/handspy/linguini</bintrayURL>
        <mavenURL>http://mvnrepository.com/artifact/${project.groupId}/${project.artifactId}</mavenURL>
    </properties>

    <!-- ********************************************** -->
    <!-- *************** DEPENDENCIES ***************** -->
    <!-- ********************************************** -->

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- JUnit BOM -->
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <!-- Jackson JSON -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-core.version}</version>
        </dependency>
        <!-- <dependency>
            Guava
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency> -->
        <dependency>
            <!-- Apache Commons -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>
        <dependency>
            <!-- Stanford NLP -->
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>${stanford-nlp.version}</version>
        </dependency>
        <!-- ============================================== -->
        <!-- ================== LOGGERS =================== -->
        <!-- ============================================== -->
        <dependency>
            <!-- Slf4j api -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- ============================================== -->
        <!-- ======= TEST ENVIRONMENT DEPENDENCIES ======== -->
        <!-- ============================================== -->
        <dependency>
            <!-- JUnit Jupiter API -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- JUnit Jupiter Engine -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- <dependency>
            JUnit Jupiter Platform
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <scope>test</scope>
        </dependency> -->
        <!-- <dependency>
            Mockito
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency> -->
    </dependencies>

    <!-- ********************************************** -->
    <!-- ******************* BUILD ******************** -->
    <!-- ********************************************** -->

    <build>
        <defaultGoal>clean package install</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${java.release}</release>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- Changes -->
                <!-- Takes care of the changes log -->
                <!-- It is set to also validate the changes log file -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <executions>
                    <!-- Changes plugin is bound to the pre-site phase -->
                    <execution>
                        <id>check-changes</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>changes-check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-changes</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>changes-validate</goal>
                        </goals>
                        <configuration>
                            <failOnError>true</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>
                        --illegal-access=permit
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>
                        --illegal-access=permit
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
            </plugin>
            <plugin>
                <!-- Site -->
                <!-- Generates the Maven Site -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <!-- Docs Maven Skin -->
                        <groupId>com.bernardomg.maven.skins</groupId>
                        <artifactId>docs-maven-skin</artifactId>
                        <version>${site.skin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <!-- ********************************************** -->
    <!-- ****************** REPORTS ******************* -->
    <!-- ********************************************** -->

    <reporting>
        <plugins>
            <plugin>
                <!-- Checkstyle -->
                <!-- Checks that the source files comply with style standards -->
                <!-- It is using a customized rules file -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <!-- The customized rules file -->
                    <configLocation>${project.basedir}/src/config/checkstyle/checkstyle-rules.xml</configLocation>
                    <!-- Excludes generated code -->
                    <excludes>**/generated/**/*</excludes>
                </configuration>
            </plugin>
            <plugin>
                <!-- FindBugs -->
                <!-- Checks for patterns which are prone to nrOfErrors -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <!-- Exclusion patterns -->
                    <excludeFilterFile>${project.basedir}/src/config/findbugs/findbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
            <plugin>
                <!-- Javadoc -->
                <!-- Generates the javadocs -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <sourceFileExcludes>
                        <!-- Excludes generated code -->
                        <exclude>**/generated/**/*</exclude>
                    </sourceFileExcludes>
                </configuration>
            </plugin>
            <plugin>
                <!-- PMD -->
                <!-- Checks that the code complies with a series of code quality rules -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <rulesets>
                        <!-- The customized rules file -->
                        <ruleset>${project.basedir}/src/config/pmd/pmd-rules.xml</ruleset>
                    </rulesets>
                    <excludes>
                        <!-- Excludes generated code -->
                        <exclude>**/generated/**/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
